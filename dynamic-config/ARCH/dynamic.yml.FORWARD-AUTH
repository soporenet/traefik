# dynamic.yml
http:
  routers:
    traefik-dashboard:
      rule: "Host(`traefik.sandbox.sopore.net`)"  # Domain for the Traefik dashboard
      entryPoints:
        - "dashboard-secure"
      service: api@internal
      tls:
        certResolver: letsencrypt  # Use Let's Encrypt with DNS-01 challenge
        domains:
          - main: "traefik.sandbox.sopore.net"  # The domain name
      middlewares:
        - auth-radius
    # Router for the first domain (testbed1.sandbox.sopore.net)
    testbed1-router:
      rule: "Host(`testbed1.sandbox.sopore.net`)"  # Define domain
      entryPoints:
        - "web-secure"  # Use HTTPS entrypoint
      service: testbed1-service
      tls:
        certResolver: letsencrypt  # Use Let's Encrypt with DNS-01 challenge
        domains:
          - main: "testbed1.sandbox.sopore.net"  # The domain name
    # Router for the second domain ("testbed2.sandbox.sopore.net)
    testbed2-router:
      rule: "Host(`testbed2.sandbox.sopore.net`)"  # Define another domain
      entryPoints:
        - "web-secure"  # Use HTTPS entrypoint
      service: testbed2-service
      tls:
        certResolver: letsencrypt  # Use Let's Encrypt with DNS-01 challenge
        domains:
          - main: "testbed2.sandbox.sopore.net"  # The domain name

  middlewares:
    auth-radius:
      forwardAuth:
        address: "http://nginx:80"  # Forward authentication to Nginx 80
        trustForwardHeader: true

  services:
    testbed1-service:
      loadBalancer:
        servers:
          - url: "http://testbed1-backend"  # Replace with your backend URL

    testbed2-service:
      loadBalancer:
        servers:
          - url: "http://testbed2-backend"  # Replace with your backend URL
    api:
      loadBalancer:
        servers:
          - url: "http://traefik:8086"  # Traefik's internal dashboard 8080

